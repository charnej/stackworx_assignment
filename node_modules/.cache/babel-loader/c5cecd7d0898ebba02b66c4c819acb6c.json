{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\User\\\\Desktop\\\\stackworx_assignment\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\User\\\\Desktop\\\\stackworx_assignment\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\User\\\\Desktop\\\\stackworx_assignment\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\User\\\\Desktop\\\\stackworx_assignment\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\User\\\\Desktop\\\\stackworx_assignment\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\User\\\\Desktop\\\\stackworx_assignment\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\stackworx_assignment\\\\src\\\\Block.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\n\nvar Block =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Block, _Component);\n\n  function Block(props) {\n    var _this;\n\n    _classCallCheck(this, Block);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Block).call(this, props));\n    _this.state = {\n      previousStatus: \"\",\n      previousPayload: \"\",\n      currentStatus: \"\",\n      currentPayload: \"\",\n      isHidden: true\n    };\n    _this.doFetchData = _this.doFetchData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Block, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.doFetchData();\n      this.interval = setInterval(function () {\n        return _this2.doFetchData();\n      }, 1000 * 6);\n    }\n  }, {\n    key: \"doFetchData\",\n    value: function doFetchData() {\n      //alert('Success!')\n      if (this.state.currentStatus !== \"\") {\n        this.setState({\n          previousStatus: this.state.currentStatus\n        });\n      }\n\n      var request = require(\"request\");\n\n      request({\n        uri: this.props.url,\n        method: \"GET\"\n      }, function (error, response, body) {\n        var result = null;\n\n        if (error) {\n          result = \"OTHER\";\n        } else if (response.statusCode === 200) {\n          result = \"UP\";\n        } else if (response.statusCode === 503) {\n          result = \"DOWN\";\n        } else {\n          result = \"DOWN\";\n        }\n\n        this.setState({\n          currentStatus: result\n        }); //alert(result)\n\n        console.log(JSON.stringify(response));\n      }.bind(this));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return (//<span>{this.props.url}</span>\n        React.createElement(\"div\", {\n          className: \"block-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, \"URL: \", this.props.url)), React.createElement(\"div\", {\n          className: this.state.currentStatus === \"UP\" ? \"green\" : this.state.currentStatus === \"DOWN\" ? \"red\" : \"grey\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \"Current State: \", this.state.currentStatus), React.createElement(\"div\", {\n          className: \"hidden\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, \"Previous State: \", this.state.previousStatus), React.createElement(\"span\", {\n          onClick: this.props.remove,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \"\\u2715\"))\n      );\n    }\n  }]);\n\n  return Block;\n}(Component);\n\nexport default Block;","map":{"version":3,"sources":["C:\\Users\\User\\Desktop\\stackworx_assignment\\src\\Block.js"],"names":["React","Component","Block","props","state","previousStatus","previousPayload","currentStatus","currentPayload","isHidden","doFetchData","bind","interval","setInterval","setState","request","require","uri","url","method","error","response","body","result","statusCode","console","log","JSON","stringify","remove"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;IAEMC,K;;;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAE,EADL;AAEXC,MAAAA,eAAe,EAAE,EAFN;AAGXC,MAAAA,aAAa,EAAE,EAHJ;AAIXC,MAAAA,cAAc,EAAE,EAJL;AAKTC,MAAAA,QAAQ,EAAE;AALD,KAAb;AAQA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAnB;AAXiB;AAYlB;;;;wCAEmB;AAAA;;AAClB,WAAKD,WAAL;AACA,WAAKE,QAAL,GAAgBC,WAAW,CAAC;AAAA,eAAM,MAAI,CAACH,WAAL,EAAN;AAAA,OAAD,EAA2B,OAAO,CAAlC,CAA3B;AACD;;;kCAEa;AACZ;AAEA,UAAI,KAAKN,KAAL,CAAWG,aAAX,KAA6B,EAAjC,EAAqC;AACnC,aAAKO,QAAL,CAAc;AAAET,UAAAA,cAAc,EAAE,KAAKD,KAAL,CAAWG;AAA7B,SAAd;AACD;;AAED,UAAMQ,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACAD,MAAAA,OAAO,CACL;AACEE,QAAAA,GAAG,EAAE,KAAKd,KAAL,CAAWe,GADlB;AAEEC,QAAAA,MAAM,EAAE;AAFV,OADK,EAKL,UAASC,KAAT,EAAgBC,QAAhB,EAA0BC,IAA1B,EAAgC;AAC9B,YAAIC,MAAM,GAAG,IAAb;;AAEA,YAAIH,KAAJ,EAAW;AACTG,UAAAA,MAAM,GAAG,OAAT;AACD,SAFD,MAEO,IAAIF,QAAQ,CAACG,UAAT,KAAwB,GAA5B,EAAiC;AACtCD,UAAAA,MAAM,GAAG,IAAT;AACD,SAFM,MAED,IAAIF,QAAQ,CAACG,UAAT,KAAwB,GAA5B,EAAiC;AACnCD,UAAAA,MAAM,GAAG,MAAT;AACH,SAFK,MAGD;AACHA,UAAAA,MAAM,GAAG,MAAT;AACD;;AAED,aAAKT,QAAL,CAAc;AAAEP,UAAAA,aAAa,EAAEgB;AAAjB,SAAd,EAd8B,CAe9B;;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeP,QAAf,CAAZ;AACD,OAjBD,CAiBEV,IAjBF,CAiBO,IAjBP,CALK,CAAP;AAwBD;;;6BAGQ;AAEP,aACE;AACA;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAU,KAAKR,KAAL,CAAWe,GAArB,CAAL,CADJ,EAEE;AAAK,UAAA,SAAS,EACV,KAAKd,KAAL,CAAWG,aAAX,KAA6B,IAA7B,GACM,OADN,GAEM,KAAKH,KAAL,CAAWG,aAAX,KAA6B,MAA7B,GACA,KADA,GAEA,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAMkB,KAAKH,KAAL,CAAWG,aAN7B,CAFF,EASE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAA0C,KAAKH,KAAL,CAAWC,cAArD,CATF,EAUE;AAAM,UAAA,OAAO,EAAE,KAAKF,KAAL,CAAW0B,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF;AAFF;AAeD;;;;EAxEiB5B,S;;AA2EpB,eAAeC,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass Block extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      previousStatus: \"\",\n      previousPayload: \"\",\n      currentStatus: \"\",\n      currentPayload: \"\",\n        isHidden: true\n    };\n\n    this.doFetchData = this.doFetchData.bind(this);\n  }\n\n  componentDidMount() {\n    this.doFetchData();\n    this.interval = setInterval(() => this.doFetchData(), 1000 * 6);\n  }\n\n  doFetchData() {\n    //alert('Success!')\n\n    if (this.state.currentStatus !== \"\") {\n      this.setState({ previousStatus: this.state.currentStatus });\n    }\n\n    const request = require(\"request\");\n    request(\n      {\n        uri: this.props.url,\n        method: \"GET\"\n      },\n      function(error, response, body) {\n        let result = null;\n\n        if (error) {\n          result = \"OTHER\";\n        } else if (response.statusCode === 200) {\n          result = \"UP\";\n        }else if (response.statusCode === 503) {\n            result = \"DOWN\";\n        }\n        else {\n          result = \"DOWN\";\n        }\n\n        this.setState({ currentStatus: result });\n        //alert(result)\n        console.log(JSON.stringify(response));\n      }.bind(this)\n    );\n  }\n\n\n  render() {\n\n    return (\n      //<span>{this.props.url}</span>\n      <div className=\"block-container\" >\n          <div><h3>URL: {this.props.url}</h3></div>\n        <div className={\n            this.state.currentStatus === \"UP\"\n                ? \"green\"\n                : this.state.currentStatus === \"DOWN\"\n                ? \"red\"\n                : \"grey\"\n        }>Current State: {this.state.currentStatus}</div>\n        <div className=\"hidden\" >Previous State: {this.state.previousStatus}</div>\n        <span onClick={this.props.remove}>&#10005;</span>\n      </div>\n    );\n  }\n}\n\nexport default Block;\n"]},"metadata":{},"sourceType":"module"}